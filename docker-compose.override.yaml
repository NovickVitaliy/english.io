services:
  authentication.api:
    container_name: authentication.api
    restart: always
    environment:
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT}
      - ASPNETCORE_HTTP_PORTS=${ASPNETCORE_HTTP_PORTS}
      - ConnectionStrings__Default=${AUTH_DB_CONNECTION_STRING}
      - NotificationsApi__Http=http://notifications-api:8080/
      - NotificationsApi__Https=https://notifications-api:8081/
      - NotificationsApi__IsHttps=false
    env_file:
      - .env
    ports:
      - "${AUTH_API_PORT}:${ASPNETCORE_HTTP_PORTS}"
    depends_on:
      auth.db:
        condition: service_started
      rabbitmq-broker:
        condition: service_healthy

  learning.api:
    container_name: learning.api
    restart: always
    environment:
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT}
      - ASPNETCORE_HTTP_PORTS=${ASPNETCORE_HTTP_PORTS}
      - MongoOptions__ConnectionString=${MONGO_OPTIONS_CONNECTION_STRING}
      - MongoOptions__DatabaseName=${MONGO_OPTIONS_DATABASE_NAME}
    ports:
      - "${LEARNING_API_PORT}:${ASPNETCORE_HTTP_PORTS}"
    env_file:
      - .env
    depends_on:
      learning.db:
        condition: service_started
      rabbitmq-broker:
        condition: service_healthy

  notifications.api:
    container_name: notifications-api
    restart: always
    env_file:
      - .env
    ports:
      - "${NOTIFICATIONS_API_PORT}:${ASPNETCORE_HTTP_PORTS}"
    environment:
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT}
      - ASPNETCORE_HTTP_PORTS=${ASPNETCORE_HTTP_PORTS}
      - MailSettings__Server=${MAILSETTINGS_SERVER}
      - MailSettings__Port=${MAILSETTINGS_PORT}
      - MailSettings__SenderName=${MAILSETTINGS_SENDERNAME}
      - MailSettings__SenderEmail=${MAILSETTINGS_SENDEREMAIL}
      - MailSettings__Password=${MAILSETTINGS_PASSWORD}
      - MailSettings__Username=${MAILSETTINGS_USERNAME}

  auth.db:
    container_name: auth.db
    restart: always
    environment:
      - POSTGRES_PASSWORD=${AUTH_POSTGRES_PASSWORD}
      - POSTGRES_USER=${AUTH_POSTGRES_USER}
      - POSTGRES_DB=${AUTH_POSTGRES_DB}
    ports:
      - "${AUTH_POSTGRES_PORT}:5432"
    volumes:
      - ${AUTH_AUTH_DB_VOLUME}:/var/lib/postgresql/data

  learning.db:
    container_name: learning.db
    restart: always
    ports:
      - "${LEARNING_DB_PORT}:27017"
    volumes:
      - ${LEARNING_DB_VOLUME}:/data/db

  notifications.db:
    container_name: notifications.db
    restart: always
    environment:
      - POSTGRES_PASSWORD=${NOTIFICATIONS_POSTGRES_PASSWORD}
      - POSTGRES_USER=${NOTIFICATIONS_POSTGRES_USER}
      - POSTGRES_DB=${NOTIFICATIONS_POSTGRES_DB}
    ports:
      - "${NOTIFICATIONS_POSTGRES_PORT}:5432"
    volumes:
      - ${NOTIFICATIONS_DB_VOLUME}:/var/lib/postgresql/data

  mongo-ui:
    container_name: mongo-ui
    restart: always
    ports:
      - "${MONGO_UI_PORT}:8081"
    environment:
      - ME_CONFIG_MONGODB_URL=${MONGO_DB_URL}
      - ME_CONFIG_BASICAUTH=${MONGO_UI_AUTH}
    profiles:
      - development

  rabbitmq-broker:
    container_name: rabbitmq-broker
    restart: always
    hostname: english-io
    environment:
      - RABBITMQ_DEFAULT_USER=${MESSAGE_BROKER_USERNAME}
      - RABBITMQ_DEFAULT_PASS=${MESSAGE_BROKER_PASSWORD}
    ports:
      - "${RABBITMQ_BUS_PORT}:5672"
      - "${RABBITMQ_UI_PORT}:15672"
    healthcheck:
      test: [ "CMD", "rabbitmqctl", "status" ]
      interval: 10s
      timeout: 5s
      retries: 5
