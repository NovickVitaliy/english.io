@using Microsoft.Extensions.Configuration
@using MudBlazor
@inject NavigationManager NavigationManager
@inject IConfiguration Configuration

@if (_cultures is not null)
{
    <MudGrid Class="d-flex justify-end">
        <MudItem lg="2" md="4" xs="6">
            <MudSelect Value="_selectedCulture" ValueChanged="@((string? locCode) => RequestCultureChange(locCode))"
                       FullWidth="true" Margin="Margin.Dense">
                @foreach (var culture in _cultures)
                {
                    if (culture.Value == _selectedCulture)
                    {
                        <MudSelectItem Value="culture.Key" selected>@culture.Value</MudSelectItem>
                    }
                    else
                    {
                        <MudSelectItem Value="culture.Key">@culture.Value</MudSelectItem>
                    }
                }
            </MudSelect>
        </MudItem>
    </MudGrid>
}

@code {
    private string _selectedCultureCode = Thread.CurrentThread.CurrentCulture.Name;
    private string? _selectedCulture;
    private Dictionary<string, string>? _cultures = null!;

    protected override void OnInitialized()
    {
        _cultures = Configuration.GetSection("Cultures")
            .GetChildren().ToDictionary(x => x.Key, x => x.Value)!;

        _selectedCulture = _cultures[_selectedCultureCode];
    }

    private void RequestCultureChange(string locCode)
    {
        if (string.IsNullOrWhiteSpace(locCode)) return;

        if (locCode.Any(c => !Uri.IsWellFormedUriString(c.ToString(), UriKind.RelativeOrAbsolute)))
        {
            Console.WriteLine($"Invalid culture string: {_selectedCulture}");
            return;
        }

        var uri = new Uri(NavigationManager.Uri)
            .GetComponents(UriComponents.PathAndQuery, UriFormat.Unescaped);

        var query = $"?culture={Uri.EscapeDataString(locCode)}&" +
                    $"redirectUri={Uri.EscapeDataString(uri)}";

        NavigationManager.NavigateTo("Culture/SetCulture" + query, forceLoad: true);
    }
}